{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let StockComponent = class StockComponent {\n  constructor(authService, http, router, formBuilder, dialog) {\n    this.authService = authService;\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.companies = [];\n    this.selectedCompany = null;\n  }\n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      //companyCode: ['', Validators.required],\n      stockPrice: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    }\n    console.log(\"inside\");\n    const url = `http://localhost:8081/v1.0/market/stock/add/${this.selectedCompany?.companyCode}`;\n    const token = sessionStorage.getItem('token');\n    const body = {\n      stockPrice: this.companyForm.value.stockPrice\n      // latestStockPrice: this.companyForm.value.latestStockPrice,\n    };\n\n    console.log(this.companyForm);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    console.log('Company Name:', this.companyForm.value.companyName);\n    this.http.post(url, body, httpOptions).subscribe(() => {\n      console.log('Company added successfully');\n      // Handle success response here\n      this.router.navigate(['/company']);\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Stocks added successfully!'\n    });\n  }\n};\nStockComponent = __decorate([Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})], StockComponent);","map":{"version":3,"names":["HttpHeaders","Component","Validators","Swal","StockComponent","constructor","authService","http","router","formBuilder","dialog","companies","selectedCompany","ngOnInit","companyForm","group","stockPrice","required","submitForm","invalid","console","log","url","companyCode","token","sessionStorage","getItem","body","value","httpOptions","headers","companyName","post","subscribe","navigate","error","fire","icon","title","text","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\stock\\stock.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Company } from '../model/company';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent {\n  companyForm!: FormGroup;\n  companies: Company[] = [];\n  selectedCompany: Company | null = null;\n  constructor(private authService: AuthService, private http: HttpClient, private router: Router,private formBuilder: FormBuilder, private dialog: MatDialog) { }\n \n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      //companyCode: ['', Validators.required],\n      \n      stockPrice: ['', Validators.required],\n      \n    });\n    \n   \n   \n  }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    \n    }\n    console.log(\"inside\")\n    const url = `http://localhost:8081/v1.0/market/stock/add/${this.selectedCompany?.companyCode}`\n    const token = sessionStorage.getItem('token');\n    const body = {\n      \n      stockPrice: this.companyForm.value.stockPrice,\n     // latestStockPrice: this.companyForm.value.latestStockPrice,\n      \n    };\n    console.log(this.companyForm) \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n \n    console.log('Company Name:', this.companyForm.value.companyName);\n    \n    this.http.post(url, body, httpOptions).subscribe(\n      () => {\n        console.log('Company added successfully');\n        // Handle success response here\n        this.router.navigate(['/company']);\n        \n      },\n      (error) => {\n        console.error(error);\n        // Handle error response here\n      }\n    );\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Stocks added successfully!',\n    });\n   \n  }\n\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAQ,eAAe;AACzC,SAAoBC,UAAU,QAAQ,gBAAgB;AAEtD,OAAOC,IAAI,MAAM,aAAa;AASvB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAc,EAASC,WAAwB,EAAUC,MAAiB;IAAtI,KAAAJ,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF/I,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,eAAe,GAAmB,IAAI;EACwH;EAE9JC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACxC;MAEAC,UAAU,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ;KAErC,CAAC;EAIJ;EACAC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE;MAC5B;;IAGFC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMC,GAAG,GAAG,+CAA+C,IAAI,CAACV,eAAe,EAAEW,WAAW,EAAE;IAC9F,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,MAAMC,IAAI,GAAG;MAEXX,UAAU,EAAE,IAAI,CAACF,WAAW,CAACc,KAAK,CAACZ;MACpC;KAEA;;IACDI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAAC;IAC7B,MAAMe,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAI9B,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGwB;OAC9B;KACF;IAEDJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACP,WAAW,CAACc,KAAK,CAACG,WAAW,CAAC;IAEhE,IAAI,CAACxB,IAAI,CAACyB,IAAI,CAACV,GAAG,EAAEK,IAAI,EAAEE,WAAW,CAAC,CAACI,SAAS,CAC9C,MAAK;MACHb,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA,IAAI,CAACb,MAAM,CAAC0B,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IAEpC,CAAC,EACAC,KAAK,IAAI;MACRf,OAAO,CAACe,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CACF;;IACDhC,IAAI,CAACiC,IAAI,CAAC;MACRC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;KACP,CAAC;EAEJ;CAED;AA7DYnC,cAAc,GAAAoC,UAAA,EAL1BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWvC,cAAc,CA6D1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}