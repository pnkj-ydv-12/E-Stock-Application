{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let StockComponent = class StockComponent {\n  constructor(authService, http, router, formBuilder, dialog) {\n    this.authService = authService;\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.companies = [];\n    this.searchText = '';\n    this.selectedCompany = null;\n    this.isUpdate = false;\n  }\n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      companyCode: ['', Validators.required],\n      stockPrice: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    }\n    console.log(\"inside\");\n    const url = 'http://localhost:8081/v1.0/market/company/register';\n    const token = sessionStorage.getItem('token');\n    const body = {\n      // companyCode: this.companyForm.value.companyCode,\n      companyName: this.companyForm.value.companyName,\n      companyCEO: this.companyForm.value.companyCEO,\n      companyTurnover: this.companyForm.value.companyTurnover,\n      companyWebsite: this.companyForm.value.companyWebsite,\n      stockExchange: this.companyForm.value.stockExchange\n      //stockPrice: this.companyForm.value.stockPrice,\n      // latestStockPrice: this.companyForm.value.latestStockPrice,\n    };\n\n    console.log(this.companyForm);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    console.log('Company Name:', this.companyForm.value.companyName);\n    this.http.post(url, body, httpOptions).subscribe(() => {\n      console.log('Company added successfully');\n      // Handle success response here\n      this.router.navigate(['/dashboard']);\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Stocks added successfully!'\n    });\n  }\n};\nStockComponent = __decorate([Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})], StockComponent);","map":{"version":3,"names":["Component","Validators","Swal","StockComponent","constructor","authService","http","router","formBuilder","dialog","companies","searchText","selectedCompany","isUpdate","ngOnInit","companyForm","group","companyCode","required","stockPrice","submitForm","invalid","console","log","url","token","sessionStorage","getItem","body","companyName","value","companyCEO","companyTurnover","companyWebsite","stockExchange","httpOptions","headers","HttpHeaders","post","subscribe","navigate","error","fire","icon","title","text","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\stock\\stock.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Company } from '../model/company';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent {\n  companyForm!: FormGroup;\n  companies: Company[] = [];\n  searchText: string = '';\n   selectedCompany: Company | null = null;\n  isUpdate = false;\n  c !: Company;\n  constructor(private authService: AuthService, private http: HttpClient, private router: Router,private formBuilder: FormBuilder, private dialog: MatDialog) { }\n \n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      companyCode: ['', Validators.required],\n      \n      stockPrice: ['', Validators.required],\n      \n    });\n    \n   \n   \n  }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    \n    }\n    console.log(\"inside\")\n    const url = 'http://localhost:8081/v1.0/market/company/register';\n    const token = sessionStorage.getItem('token');\n    const body = {\n      // companyCode: this.companyForm.value.companyCode,\n      companyName: this.companyForm.value.companyName,\n      companyCEO: this.companyForm.value.companyCEO,\n      companyTurnover: this.companyForm.value.companyTurnover,\n      companyWebsite: this.companyForm.value.companyWebsite,\n      stockExchange: this.companyForm.value.stockExchange,\n      //stockPrice: this.companyForm.value.stockPrice,\n     // latestStockPrice: this.companyForm.value.latestStockPrice,\n      \n    };\n    console.log(this.companyForm) \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n \n    console.log('Company Name:', this.companyForm.value.companyName);\n    \n    this.http.post(url, body, httpOptions).subscribe(\n      () => {\n        console.log('Company added successfully');\n        // Handle success response here\n        this.router.navigate(['/dashboard']);\n        \n      },\n      (error) => {\n        console.error(error);\n        // Handle error response here\n      }\n    );\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Stocks added successfully!',\n    });\n   \n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,OAAOC,IAAI,MAAM,aAAa;AASvB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAc,EAASC,WAAwB,EAAUC,MAAiB;IAAtI,KAAAJ,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAL/I,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,UAAU,GAAW,EAAE;IACtB,KAAAC,eAAe,GAAmB,IAAI;IACvC,KAAAC,QAAQ,GAAG,KAAK;EAE8I;EAE9JC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC;MACxCC,WAAW,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MAEtCC,UAAU,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACiB,QAAQ;KAErC,CAAC;EAIJ;EACAE,UAAUA,CAAA;IACR,IAAI,IAAI,CAACL,WAAW,CAACM,OAAO,EAAE;MAC5B;;IAGFC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMC,GAAG,GAAG,oDAAoD;IAChE,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,MAAMC,IAAI,GAAG;MACX;MACAC,WAAW,EAAE,IAAI,CAACd,WAAW,CAACe,KAAK,CAACD,WAAW;MAC/CE,UAAU,EAAE,IAAI,CAAChB,WAAW,CAACe,KAAK,CAACC,UAAU;MAC7CC,eAAe,EAAE,IAAI,CAACjB,WAAW,CAACe,KAAK,CAACE,eAAe;MACvDC,cAAc,EAAE,IAAI,CAAClB,WAAW,CAACe,KAAK,CAACG,cAAc;MACrDC,aAAa,EAAE,IAAI,CAACnB,WAAW,CAACe,KAAK,CAACI;MACtC;MACD;KAEA;;IACDZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAAC;IAC7B,MAAMoB,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIC,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGZ;OAC9B;KACF;IAEDH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACR,WAAW,CAACe,KAAK,CAACD,WAAW,CAAC;IAEhE,IAAI,CAACvB,IAAI,CAACgC,IAAI,CAACd,GAAG,EAAEI,IAAI,EAAEO,WAAW,CAAC,CAACI,SAAS,CAC9C,MAAK;MACHjB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACA,IAAI,CAAChB,MAAM,CAACiC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IAEtC,CAAC,EACAC,KAAK,IAAI;MACRnB,OAAO,CAACmB,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CACF;;IACDvC,IAAI,CAACwC,IAAI,CAAC;MACRC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;KACP,CAAC;EAEJ;CAED;AArEY1C,cAAc,GAAA2C,UAAA,EAL1B9C,SAAS,CAAC;EACT+C,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW9C,cAAc,CAqE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}