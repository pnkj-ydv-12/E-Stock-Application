{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../service/EStock.service\";\nimport * as i4 from \"../service/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction CompanyInfoComponent_tbody_73_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r4.timeStamp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r4.price);\n  }\n}\nfunction CompanyInfoComponent_tbody_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, CompanyInfoComponent_tbody_73_tr_1_Template, 7, 3, \"tr\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.stockTransactions);\n  }\n}\nfunction CompanyInfoComponent_ng_template_74_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r6.timeStamp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r6.price);\n  }\n}\nfunction CompanyInfoComponent_ng_template_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CompanyInfoComponent_ng_template_74_tr_0_Template, 7, 3, \"tr\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.filteredTransactions);\n  }\n}\nexport class CompanyInfoComponent {\n  constructor(route, http, es, authService) {\n    this.route = route;\n    this.http = http;\n    this.es = es;\n    this.authService = authService;\n    this.stockTransactions = [];\n    this.filteredTransactions = [];\n    this.priceFilter = null;\n    this.isFilterApplied = false;\n    this.startDate = null;\n    this.endDate = null;\n    this.maxStockPrice = null;\n    this.minStockPrice = null;\n    this.avgStockPrice = null;\n    this.barChartOptions = {\n      responsive: true\n    };\n    this.barChartLabels = [];\n    this.barChartType = 'bar';\n    this.barChartLegend = true;\n    this.barChartData = [];\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.companyCode = +params['companyCode'];\n      this.getCompanyDetails();\n      this.getStockTransactions();\n      this.initializeChartData();\n    });\n  }\n  initializeChartData() {\n    // Extract date labels and prices for the bar chart\n    const dates = this.stockTransactions.map(transaction => transaction.timeStamp);\n    const prices = this.stockTransactions.map(transaction => transaction.price);\n    // Format dates to 'yyyy-MM-dd' format\n    this.barChartLabels = dates.map(date => this.formatDate(date));\n    // Set data for the bar chart\n    this.barChartData = [{\n      data: prices,\n      label: 'Stock Prices'\n    }];\n  }\n  formatDate(dateString) {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    return `${year}-${month}-${day}`;\n  }\n  getCompanyDetails() {\n    console.log(\"insdie getcompanyDetails\");\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      // Handle the case when there is no token (e.g., redirect to login)\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getCompanyDetailsByCode(this.companyCode, token).subscribe(data => {\n      console.log(data);\n      this.companyDetails = data;\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n  }\n\n  getStockTransactions() {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getStockTransactionsByCompanyCode(this.companyCode, token).subscribe(data => {\n      console.log('Data received:', data);\n      if (Array.isArray(data)) {\n        this.stockTransactions = data;\n        console.log(this.stockTransactions);\n        this.calculateMaxPrice();\n        this.calculateMinPrice();\n        this.calculateAveragePrice();\n      } else {\n        console.error('Data is not an array:', data);\n      }\n    }, error => {\n      console.error(error);\n    });\n  }\n  filterTableByPrice() {\n    if (this.priceFilter !== null || this.priceFilter !== undefined) {\n      // Apply the filter using Angular's built-in filter pipe\n      this.filteredTransactions = this.stockTransactions.filter(transaction => transaction.price === this.priceFilter);\n      this.isFilterApplied = true; // Set the flag\n    } else {\n      // If the filter is null or undefined, show all transactions\n      this.filteredTransactions = this.stockTransactions;\n      this.isFilterApplied = false; // Reset the flag\n    }\n  }\n\n  clearFilter() {\n    // Clear the filter and reset the filtered transactions\n    this.priceFilter = null;\n    this.filteredTransactions = this.stockTransactions;\n    this.isFilterApplied = false;\n    this.startDate = null;\n    this.endDate = null;\n  }\n  filterTableByDateRange() {\n    // Check if startDate and endDate are not null\n    if (this.startDate !== null && this.endDate !== null) {\n      // Convert startDate and endDate to Date objects\n      const startDateObject = new Date(this.startDate);\n      const endDateObject = new Date(this.endDate);\n      // Check if the date is valid\n      if (!isNaN(startDateObject.getTime()) && !isNaN(endDateObject.getTime())) {\n        // Apply the filter using Angular's built-in filter pipe\n        this.filteredTransactions = this.stockTransactions.filter(transaction => {\n          const transactionDate = new Date(transaction.timeStamp);\n          // Check if the transaction date is within the selected range\n          return transactionDate >= startDateObject && transactionDate <= endDateObject;\n        });\n        this.isFilterApplied = true; // Set the flag\n      } else {\n        console.error('Invalid date range');\n      }\n    } else {\n      console.error('Start date or end date is null');\n    }\n  }\n  calculateMaxPrice() {\n    if (this.stockTransactions.length > 0) {\n      this.maxStockPrice = Math.max(...this.stockTransactions.map(transaction => transaction.price));\n    } else {\n      this.maxStockPrice = null;\n    }\n  }\n  calculateMinPrice() {\n    if (this.stockTransactions.length > 0) {\n      this.minStockPrice = Math.min(...this.stockTransactions.map(transaction => transaction.price));\n    } else {\n      this.minStockPrice = null;\n    }\n  }\n  calculateAveragePrice() {\n    if (this.stockTransactions.length > 0) {\n      const total = this.stockTransactions.reduce((sum, transaction) => sum + transaction.price, 0);\n      this.avgStockPrice = total / this.stockTransactions.length;\n    } else {\n      this.avgStockPrice = null;\n    }\n  }\n  static #_ = this.ɵfac = function CompanyInfoComponent_Factory(t) {\n    return new (t || CompanyInfoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.EstockService), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CompanyInfoComponent,\n    selectors: [[\"app-company-info\"]],\n    decls: 91,\n    vars: 19,\n    consts: [[\"lang\", \"en\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"], [1, \"container\"], [1, \"card\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"for\", \"companyCode\"], [\"for\", \"companyName\"], [\"for\", \"companyTurnover\"], [\"for\", \"companyWebsite\"], [\"for\", \"stockExchange\"], [\"for\", \"latestStockPrice\"], [\"for\", \"filter\"], [\"id\", \"filter\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"for\", \"dateRange\"], [\"id\", \"startDate\", \"type\", \"date\", \"placeholder\", \"Start Date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"endDate\", \"type\", \"date\", \"placeholder\", \"End Date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"table\"], [4, \"ngIf\", \"ngIfElse\"], [\"filteredTable\", \"\"], [1, \"pagination\"], [2, \"display\", \"block\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"chartType\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CompanyInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"link\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"body\")(5, \"div\", 3)(6, \"div\", 4)(7, \"h1\");\n        i0.ɵɵtext(8, \"Company Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"div\", 6)(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Company Code:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Company Name:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Company Turnover:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Company Website:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 12);\n        i0.ɵɵtext(25, \"Company Stock Exchange:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 7)(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Latest Stock Price:\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 6)(30, \"div\");\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelementStart(33, \"div\");\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelementStart(36, \"div\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementStart(39, \"div\");\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelementStart(42, \"div\");\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"br\")(45, \"br\");\n        i0.ɵɵelementStart(46, \"div\");\n        i0.ɵɵtext(47);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(48, \"div\", 4)(49, \"h1\");\n        i0.ɵɵtext(50, \"Stock Transactions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 7)(52, \"label\", 14);\n        i0.ɵɵtext(53, \"Filter:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function CompanyInfoComponent_Template_input_ngModelChange_54_listener($event) {\n          return ctx.priceFilter = $event;\n        })(\"input\", function CompanyInfoComponent_Template_input_input_54_listener() {\n          return ctx.filterTableByPrice();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 7)(56, \"label\", 16);\n        i0.ɵɵtext(57, \"Enter a Date Range:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function CompanyInfoComponent_Template_input_ngModelChange_58_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function CompanyInfoComponent_Template_input_ngModelChange_59_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function CompanyInfoComponent_Template_button_click_60_listener() {\n          return ctx.filterTableByDateRange();\n        });\n        i0.ɵɵtext(61, \"Apply Date Range\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(62, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function CompanyInfoComponent_Template_button_click_62_listener() {\n          return ctx.clearFilter();\n        });\n        i0.ɵɵtext(63, \"Clear Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"table\", 20)(65, \"thead\")(66, \"tr\")(67, \"th\");\n        i0.ɵɵtext(68, \"Stock Transaction ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"th\");\n        i0.ɵɵtext(70, \"Stock Creation Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"th\");\n        i0.ɵɵtext(72, \"Stock Price\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(73, CompanyInfoComponent_tbody_73_Template, 2, 1, \"tbody\", 21);\n        i0.ɵɵtemplate(74, CompanyInfoComponent_ng_template_74_Template, 1, 1, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"div\", 23)(77, \"button\");\n        i0.ɵɵtext(78, \"1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(79, \"div\")(80, \"p\");\n        i0.ɵɵtext(81);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"p\");\n        i0.ɵɵtext(83);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"p\");\n        i0.ɵɵtext(85);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(86, \"div\", 24);\n        i0.ɵɵelement(87, \"canvas\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(88, \"br\")(89, \"br\")(90, \"br\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(75);\n        i0.ɵɵadvance(31);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.companyCode);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.companyName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.companyTurnover);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.companyWebsite);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.stockExchange);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.companyDetails == null ? null : ctx.companyDetails.latestStockPrice);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.priceFilter);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isFilterApplied)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\"Maximum Stock Price: \", ctx.maxStockPrice !== null ? ctx.maxStockPrice : \"N/A\", \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Minimum Stock Price: \", ctx.minStockPrice !== null ? ctx.minStockPrice : \"N/A\", \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Average Stock Price: \", ctx.avgStockPrice !== null ? ctx.avgStockPrice.toFixed(2) : \"N/A\", \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"chartType\", ctx.barChartType);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.NgControlStatus, i6.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"body[_ngcontent-%COMP%] {\\n            margin: 0;\\n            padding: 0;\\n            \\n\\n            background-size: cover;\\n            background-position: center;\\n            font-family: 'Arial', sans-serif;\\n            color: rgb(255, 255, 255);\\n            background-color: #0000;\\n        }\\n\\n        .container[_ngcontent-%COMP%] {\\n            display: flex;\\n            justify-content: space-around;\\n            align-items: flex-start;\\n            height: 100vh;\\n            flex-wrap: wrap;\\n        }\\n\\n        .card[_ngcontent-%COMP%] {\\n            margin-top:5%;\\n            border-radius: 15px;\\n            border-left: 5px solid #04AA6D;\\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n            margin-bottom: 20px;\\n            background-color: rgb(85, 167, 170);\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            padding: 20px;\\n            width: 45%; \\n\\n        }\\n\\n        .card[_ngcontent-%COMP%]:hover {\\n            transform: scale(1.02);\\n        }\\n\\n        h1[_ngcontent-%COMP%] {\\n            margin-top: 10px;\\n        }\\n\\n        .loginbtn[_ngcontent-%COMP%] {\\n            background-color: #04AA6D;\\n            color: white;\\n            border: none;\\n            cursor: pointer;\\n            opacity: 0.9;\\n            transition: opacity 0.3s ease-in-out;\\n            margin-top: 10px;\\n            padding: 10px 20px;\\n        }\\n\\n        .loginbtn[_ngcontent-%COMP%]:hover {\\n            opacity: 1;\\n        }\\n\\n        .form-group[_ngcontent-%COMP%] {\\n            margin-bottom: 1.5rem;\\n        }\\n\\n        .form-control[_ngcontent-%COMP%] {\\n            border-radius: 0.25rem;\\n            border: 1px solid #ced4da;\\n            padding: 0.375rem 0.75rem;\\n            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n        }\\n\\n        .form-control[_ngcontent-%COMP%]:focus {\\n            color: #495057;\\n            background-color: #fff;\\n            border-color: #80bdff;\\n            outline: 0;\\n            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n        }\\n\\n        table[_ngcontent-%COMP%] {\\n            width: 100%;\\n            border-collapse: collapse;\\n            margin-top: 20px;\\n            \\n\\n        }\\n\\n        th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n            border: 1px solid #ddd;\\n            padding: 8px;\\n            text-align: left;\\n        }\\n\\n        th[_ngcontent-%COMP%] {\\n            background-color: #04AA6D;\\n            color: white;\\n        }\\n\\n        .pagination[_ngcontent-%COMP%] {\\n            display: flex;\\n            justify-content: center;\\n            margin-top: 10px;\\n        }\\n\\n        .pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n            background-color: #04AA6D;\\n            color: white;\\n            border: none;\\n            padding: 8px 16px;\\n            margin: 0 4px;\\n            cursor: pointer;\\n        }\\n\\n        .pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n            background-color: #027c50;\\n        }\\n        .btn[_ngcontent-%COMP%]{\\n            background-color: #04AA6D;\\n        }\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","transaction_r4","id","timeStamp","price","ɵɵtemplate","CompanyInfoComponent_tbody_73_tr_1_Template","ɵɵproperty","ctx_r0","stockTransactions","transaction_r6","CompanyInfoComponent_ng_template_74_tr_0_Template","ctx_r2","filteredTransactions","CompanyInfoComponent","constructor","route","http","es","authService","priceFilter","isFilterApplied","startDate","endDate","maxStockPrice","minStockPrice","avgStockPrice","barChartOptions","responsive","barChartLabels","barChartType","barChartLegend","barChartData","ngOnInit","params","subscribe","companyCode","getCompanyDetails","getStockTransactions","initializeChartData","dates","map","transaction","prices","date","formatDate","data","label","dateString","Date","year","getFullYear","month","getMonth","slice","day","getDate","console","log","token","sessionStorage","getItem","error","getCompanyDetailsByCode","companyDetails","getStockTransactionsByCompanyCode","Array","isArray","calculateMaxPrice","calculateMinPrice","calculateAveragePrice","filterTableByPrice","undefined","filter","clearFilter","filterTableByDateRange","startDateObject","endDateObject","isNaN","getTime","transactionDate","length","Math","max","min","total","reduce","sum","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","i3","EstockService","i4","AuthService","_2","selectors","decls","vars","consts","template","CompanyInfoComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","CompanyInfoComponent_Template_input_ngModelChange_54_listener","$event","CompanyInfoComponent_Template_input_input_54_listener","CompanyInfoComponent_Template_input_ngModelChange_58_listener","CompanyInfoComponent_Template_input_ngModelChange_59_listener","CompanyInfoComponent_Template_button_click_60_listener","CompanyInfoComponent_Template_button_click_62_listener","CompanyInfoComponent_tbody_73_Template","CompanyInfoComponent_ng_template_74_Template","ɵɵtemplateRefExtractor","companyName","companyTurnover","companyWebsite","stockExchange","latestStockPrice","_r1","ɵɵtextInterpolate1","toFixed"],"sources":["C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\company-info\\company-info.component.ts","C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\company-info\\company-info.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Company } from '../model/company';\nimport { StockPrice } from '../model/stockPrice';\nimport { AuthService } from '../service/auth.service';\nimport { EstockService } from '../service/EStock.service';\nimport { ChartConfiguration, ChartDataset, ChartOptions, Chart } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-company-info',\n  templateUrl: './company-info.component.html',\n  styleUrls: ['./company-info.component.css']\n\n})\nexport class CompanyInfoComponent implements OnInit {\n  companyCode!: number;\n  companyDetails!: Company;\n  stockTransactions: StockPrice[] = [];\n  filteredTransactions: StockPrice[] = [];\n  priceFilter: number | null = null;\n  isFilterApplied: boolean = false;\n  startDate: string | null = null;\n  endDate: string | null = null;\n  maxStockPrice: number | null = null;\n  minStockPrice: number | null = null;\n  avgStockPrice: number | null = null;\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartLabels: Label[] = [];\n  barChartType: Chart.ChartType = 'bar';\n  barChartLegend = true;\n  barChartData: ChartDataset[] = [];\n\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private es: EstockService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.companyCode = +params['companyCode'];\n      this.getCompanyDetails();\n      this.getStockTransactions();\n      this.initializeChartData();\n    });\n  }\n  initializeChartData(): void {\n    // Extract date labels and prices for the bar chart\n    const dates: string[] = this.stockTransactions.map(transaction => transaction.timeStamp);\n    const prices: number[] = this.stockTransactions.map(transaction => transaction.price);\n\n    // Format dates to 'yyyy-MM-dd' format\n    this.barChartLabels = dates.map(date => this.formatDate(date));\n\n    // Set data for the bar chart\n    this.barChartData = [\n      { data: prices, label: 'Stock Prices' },\n    ];\n  }\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    return `${year}-${month}-${day}`;\n  }\n  getCompanyDetails(): void {\n    console.log(\"insdie getcompanyDetails\");\n    \n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      // Handle the case when there is no token (e.g., redirect to login)\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getCompanyDetailsByCode(this.companyCode, token).subscribe(\n      (data: Company) => {\n        console.log(data);\n        this.companyDetails = data;\n      },\n      (error) => {\n        console.error(error);\n        // Handle error response here\n      }\n    );\n  }\n  getStockTransactions(): void {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getStockTransactionsByCompanyCode(this.companyCode, token).subscribe(\n      (data: StockPrice[] | any) => {\n        console.log('Data received:', data);\n  \n        if (Array.isArray(data)) {\n          this.stockTransactions = data;\n          console.log(this.stockTransactions);\n          this.calculateMaxPrice();\n          this.calculateMinPrice();\n          this.calculateAveragePrice();\n        } else {\n          console.error('Data is not an array:', data);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  \n  filterTableByPrice(): void {\n    if (this.priceFilter !== null || this.priceFilter !== undefined) {\n      // Apply the filter using Angular's built-in filter pipe\n      this.filteredTransactions = this.stockTransactions.filter(transaction => transaction.price === this.priceFilter);\n      this.isFilterApplied = true; // Set the flag\n    } else {\n      // If the filter is null or undefined, show all transactions\n      this.filteredTransactions = this.stockTransactions;\n      this.isFilterApplied = false; // Reset the flag\n    }\n  }\n  clearFilter(): void {\n    // Clear the filter and reset the filtered transactions\n    this.priceFilter = null;\n    this.filteredTransactions = this.stockTransactions;\n    this.isFilterApplied = false;\n    this.startDate = null;\n    this.endDate = null;\n  }\n  filterTableByDateRange(): void {\n    // Check if startDate and endDate are not null\n    if (this.startDate !== null && this.endDate !== null) {\n      // Convert startDate and endDate to Date objects\n      const startDateObject = new Date(this.startDate as string);\n      const endDateObject = new Date(this.endDate as string);\n  \n      // Check if the date is valid\n      if (!isNaN(startDateObject.getTime()) && !isNaN(endDateObject.getTime())) {\n        // Apply the filter using Angular's built-in filter pipe\n        this.filteredTransactions = this.stockTransactions.filter(transaction => {\n          const transactionDate = new Date(transaction.timeStamp);\n  \n          // Check if the transaction date is within the selected range\n          return transactionDate >= startDateObject && transactionDate <= endDateObject;\n        });\n  \n        this.isFilterApplied = true; // Set the flag\n      } else {\n        console.error('Invalid date range');\n      }\n    } else {\n      console.error('Start date or end date is null');\n    }\n  }\n  calculateMaxPrice(): void {\n    if (this.stockTransactions.length > 0) {\n      this.maxStockPrice = Math.max(...this.stockTransactions.map(transaction => transaction.price));\n    } else {\n      this.maxStockPrice = null;\n    }\n  }\n\n  calculateMinPrice(): void {\n    if (this.stockTransactions.length > 0) {\n      this.minStockPrice = Math.min(...this.stockTransactions.map(transaction => transaction.price));\n    } else {\n      this.minStockPrice = null;\n    }\n  }\n\n  calculateAveragePrice(): void {\n    if (this.stockTransactions.length > 0) {\n      const total = this.stockTransactions.reduce((sum, transaction) => sum + transaction.price, 0);\n      this.avgStockPrice = total / this.stockTransactions.length;\n    } else {\n      this.avgStockPrice = null;\n    }\n  }\n  \n  \n  \n  \n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\n            integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    \n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            /* background-image: url('https://img.freepik.com/free-vector/gradient-stock-market-concept_23-2149166910.jpg'); */\n            background-size: cover;\n            background-position: center;\n            font-family: 'Arial', sans-serif;\n            color: rgb(255, 255, 255);\n            background-color: #0000;\n        }\n\n        .container {\n            display: flex;\n            justify-content: space-around;\n            align-items: flex-start;\n            height: 100vh;\n            flex-wrap: wrap;\n        }\n\n        .card {\n            margin-top:5%;\n            border-radius: 15px;\n            border-left: 5px solid #04AA6D;\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n            margin-bottom: 20px;\n            background-color: rgb(85, 167, 170);\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 20px;\n            width: 45%; /* Adjust the width of the card */\n        }\n\n        .card:hover {\n            transform: scale(1.02);\n        }\n\n        h1 {\n            margin-top: 10px;\n        }\n\n        .loginbtn {\n            background-color: #04AA6D;\n            color: white;\n            border: none;\n            cursor: pointer;\n            opacity: 0.9;\n            transition: opacity 0.3s ease-in-out;\n            margin-top: 10px;\n            padding: 10px 20px;\n        }\n\n        .loginbtn:hover {\n            opacity: 1;\n        }\n\n        .form-group {\n            margin-bottom: 1.5rem;\n        }\n\n        .form-control {\n            border-radius: 0.25rem;\n            border: 1px solid #ced4da;\n            padding: 0.375rem 0.75rem;\n            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n        }\n\n        .form-control:focus {\n            color: #495057;\n            background-color: #fff;\n            border-color: #80bdff;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n        }\n\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n            /* color: #000000; */\n        }\n\n        th, td {\n            border: 1px solid #ddd;\n            padding: 8px;\n            text-align: left;\n        }\n\n        th {\n            background-color: #04AA6D;\n            color: white;\n        }\n\n        .pagination {\n            display: flex;\n            justify-content: center;\n            margin-top: 10px;\n        }\n\n        .pagination button {\n            background-color: #04AA6D;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            margin: 0 4px;\n            cursor: pointer;\n        }\n\n        .pagination button:hover {\n            background-color: #027c50;\n        }\n        .btn{\n            background-color: #04AA6D;\n        }\n    </style>\n</head>\n<body>\n\n    <div class=\"container\">\n        <div class=\"card\">\n            <h1>Company Details</h1>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label for=\"companyCode\">Company Code:</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyName\">Company Name:</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyTurnover\">Company Turnover:</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyWebsite\">Company Website:</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"stockExchange\">Company Stock Exchange:</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"latestStockPrice\">Latest Stock Price:</label>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div>{{ companyDetails?.companyCode }}</div><br>\n                    <div>{{ companyDetails?.companyName }}</div><br>\n                    <div>{{ companyDetails?.companyTurnover }}</div><br>\n                    <div>{{ companyDetails?.companyWebsite }}</div><br>\n                    <div>{{ companyDetails?.stockExchange }}</div><br><br>\n                    <div>{{ companyDetails?.latestStockPrice }}</div>\n                </div>\n            </div>\n        </div>\n    \n    <div class=\"card\">\n        <h1>Stock Transactions</h1>\n        <div class=\"form-group\">\n            <label for=\"filter\">Filter:</label>\n            <input id=\"filter\" class=\"form-control\" type=\"number\" [(ngModel)]=\"priceFilter\" (input)=\"filterTableByPrice()\">\n            \n          </div>\n        \n          <div class=\"form-group\">\n            <label for=\"dateRange\">Enter a Date Range:</label>\n            <input id=\"startDate\" class=\"form-control\" type=\"date\" placeholder=\"Start Date\" [(ngModel)]=\"startDate\">\n            <input id=\"endDate\" class=\"form-control\" type=\"date\" placeholder=\"End Date\" [(ngModel)]=\"endDate\">\n            <button class=\"btn btn-secondary\" (click)=\"filterTableByDateRange()\">Apply Date Range</button>\n          </div>\n        \n        <button class=\"btn btn-secondary\" (click)=\"clearFilter()\">Clear Filter</button>\n        \n\n            <!-- ... your existing code ... -->\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th>Stock Transaction ID</th>\n                    <th>Stock Creation Date</th>\n                    <th>Stock Price</th>\n                </tr>\n                </thead>\n                <tbody *ngIf=\"!isFilterApplied; else filteredTable\">\n                <!-- Show the original table when no filter is applied -->\n                <tr *ngFor=\"let transaction of stockTransactions\">\n                    <td>{{ transaction.id }}</td>\n                    <td>{{ transaction.timeStamp }}</td>\n                    <td>{{ transaction.price }}</td>\n                </tr>\n                </tbody>\n                <ng-template #filteredTable>\n                <!-- Show the filtered table when a filter is applied -->\n                <tr *ngFor=\"let transaction of filteredTransactions\">\n                    <td>{{ transaction.id }}</td>\n                    <td>{{ transaction.timeStamp }}</td>\n                    <td>{{ transaction.price }}</td>\n                </tr>\n                </ng-template>\n            </table>\n  \n  <!-- ... your existing code ... -->\n  \n\n\n\n\n        <div class=\"pagination\">\n            <button>1</button>\n            <!-- <button>2</button> -->\n            <!-- Add more buttons as needed -->\n        </div>\n        <div>\n            <p>Maximum Stock Price: {{ maxStockPrice !== null ? maxStockPrice : 'N/A' }}</p>\n            <p>Minimum Stock Price: {{ minStockPrice !== null ? minStockPrice : 'N/A' }}</p>\n            <p>Average Stock Price: {{ avgStockPrice !== null ? avgStockPrice.toFixed(2) : 'N/A' }}</p>\n          </div>\n    </div>\n    <div style=\"display: block\">\n        <canvas baseChart\n                [datasets]=\"barChartData\"\n                [labels]=\"barChartLabels\"\n                [options]=\"barChartOptions\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\">\n        </canvas>\n      </div>\n    \n</div><br><br><br>\n\n\n\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}