{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let CompanyComponent = class CompanyComponent {\n  constructor(authService, http, router, formBuilder, dialog) {\n    this.authService = authService;\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.companies = [];\n    this.searchText = '';\n    this.selectedCompany = null;\n    this.isUpdate = false;\n  }\n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      //companyCode: ['', Validators.required],\n      companyName: ['', Validators.required],\n      companyCEO: ['', Validators.required],\n      companyTurnover: ['', Validators.required],\n      companyWebsite: ['', Validators.required],\n      stockExchange: ['', Validators.required]\n      //stockPrice: ['', Validators.required],\n      //latestStockPrice: ['', Validators.required],\n    });\n\n    this.getAllCompanies();\n    //this.getMov();\n  }\n  // updateCompany(c: Company) {\n  //   this.isUpdate=true;\n  //   console.log(\"insde\");\n  //   const dialogRef = this.dialog.open(UpdateFormComponent, {\n  //     width: '400px',\n  //     data: c\n  //   });\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     if (result) {\n  //       const updatedCompany: Company = {\n  //         companyCode: c.companyCode, // Make sure to include the companyCode in the updated data\n  //         ...result // Spread the updated data\n  //       };\n  //       const url = `http://localhost:8081/v1.0/market/company/put/${updatedCompany.companyCode}`;\n  //       const httpOptions = {\n  //         headers: new HttpHeaders({\n  //           'Content-Type': 'application/json',\n  //           'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n  //         })\n  //       };\n  //       this.http.put(url, updatedCompany, httpOptions).subscribe(\n  //         () => {\n  //           console.log('Company updated successfully');\n  //           this.getAllCompanies(); // Refresh the company list\n  //         },\n  //         (error) => {\n  //           console.error(error);\n  //           // Handle error response here\n  //         }\n  //       );\n  //     }\n  //   });\n  // }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    }\n    console.log(\"inside\");\n    const url = 'http://localhost:8081/v1.0/market/company/register';\n    const token = sessionStorage.getItem('token');\n    const body = {\n      // companyCode: this.companyForm.value.companyCode,\n      companyName: this.companyForm.value.companyName,\n      companyCEO: this.companyForm.value.companyCEO,\n      companyTurnover: this.companyForm.value.companyTurnover,\n      companyWebsite: this.companyForm.value.companyWebsite,\n      stockExchange: this.companyForm.value.stockExchange\n      //stockPrice: this.companyForm.value.stockPrice,\n      // latestStockPrice: this.companyForm.value.latestStockPrice,\n    };\n\n    console.log(this.companyForm);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    console.log('Company Name:', this.companyForm.value.companyName);\n    this.http.post(url, body, httpOptions).subscribe(() => {\n      console.log('Company added successfully');\n      // Handle success response here\n      this.getAllCompanies();\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Company added successfully!'\n    });\n  }\n  getAllCompanies() {\n    const url = 'http://localhost:8081/v1.0/market/company/getAll';\n    const token = sessionStorage.getItem('token');\n    console.log(\"Token -> \", token);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n    console.log(\"httpOptions -> \", httpOptions);\n    this.http.get(url, httpOptions).subscribe(movies => {\n      this.companies = movies.map(movie => ({\n        ...movie,\n        editMode: false\n      }));\n      const latestStockPrices = this.companies.map(company => company.latestStockPrice);\n      console.log('Latest Stock Prices:', latestStockPrices);\n    });\n  }\n  update(c) {\n    const url = `http://localhost:8081/v1.0/market/company/put/${c.companyCode}`;\n    console.log(url);\n    this.isUpdate = true;\n    console.log(\"Inside\");\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      })\n    };\n    this.selectedCompany = c;\n    const body = {\n      companyName: c.companyName,\n      companyCEO: c.companyCEO,\n      companyTurnover: c.companyTurnover,\n      companyWebsite: c.companyWebsite,\n      stockExchange: c.stockExchange\n    };\n    this.http.put(url, body, httpOptions).subscribe(response => {\n      console.log(response);\n      console.log('Company updated successfully');\n      return this.getAllCompanies;\n      // Handle success response here\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n  }\n\n  deleteCompany(companyCode) {\n    const url = `http://localhost:8081/v1.0/market/company/delete/${companyCode}`;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      }),\n      responseType: 'text' // here\n    };\n\n    this.http.delete(url, httpOptions).subscribe(() => {\n      console.log(\"Reloading admin dashboard after delete!!\");\n      this.ngOnInit();\n    }, error => {\n      console.error(error);\n    });\n  }\n};\nCompanyComponent = __decorate([Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})], CompanyComponent);","map":{"version":3,"names":["HttpHeaders","Component","Validators","Swal","CompanyComponent","constructor","authService","http","router","formBuilder","dialog","companies","searchText","selectedCompany","isUpdate","ngOnInit","companyForm","group","companyName","required","companyCEO","companyTurnover","companyWebsite","stockExchange","getAllCompanies","submitForm","invalid","console","log","url","token","sessionStorage","getItem","body","value","httpOptions","headers","post","subscribe","error","fire","icon","title","text","get","movies","map","movie","editMode","latestStockPrices","company","latestStockPrice","update","c","companyCode","put","response","deleteCompany","responseType","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\company\\company.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Company } from '../model/company';\nimport { AuthService } from '../service/auth.service';\nimport { EstockService } from '../service/EStock.service';\nimport Swal from 'sweetalert2';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdateFormComponent } from '../update-form/update-form.component';\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent {\n  \n\n  companyForm!: FormGroup;\n  companies: Company[] = [];\n  searchText: string = '';\n   selectedCompany: Company | null = null;\n  isUpdate = false;\n  constructor(private authService: AuthService, private http: HttpClient, private router: Router,private formBuilder: FormBuilder, private dialog: MatDialog) { }\n \n  ngOnInit() {\n    this.companyForm = this.formBuilder.group({\n      //companyCode: ['', Validators.required],\n      companyName: ['', Validators.required],\n      companyCEO: ['', Validators.required],\n      companyTurnover: ['', Validators.required],\n      companyWebsite: ['', Validators.required],\n      stockExchange: ['', Validators.required],\n      //stockPrice: ['', Validators.required],\n      //latestStockPrice: ['', Validators.required],\n      \n    });\n    this.getAllCompanies();\n    //this.getMov();\n   \n   \n  }\n  // updateCompany(c: Company) {\n  //   this.isUpdate=true;\n    \n  //   console.log(\"insde\");\n  //   const dialogRef = this.dialog.open(UpdateFormComponent, {\n  //     width: '400px',\n  //     data: c\n  //   });\n  \n  //   dialogRef.afterClosed().subscribe(result => {\n  //     if (result) {\n  //       const updatedCompany: Company = {\n  //         companyCode: c.companyCode, // Make sure to include the companyCode in the updated data\n  //         ...result // Spread the updated data\n  //       };\n  \n  //       const url = `http://localhost:8081/v1.0/market/company/put/${updatedCompany.companyCode}`;\n  //       const httpOptions = {\n  //         headers: new HttpHeaders({\n  //           'Content-Type': 'application/json',\n  //           'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n  //         })\n  //       };\n  \n  //       this.http.put(url, updatedCompany, httpOptions).subscribe(\n  //         () => {\n  //           console.log('Company updated successfully');\n  //           this.getAllCompanies(); // Refresh the company list\n  //         },\n  //         (error) => {\n  //           console.error(error);\n  //           // Handle error response here\n  //         }\n  //       );\n  //     }\n  //   });\n  // }\n  submitForm() {\n    if (this.companyForm.invalid) {\n      return;\n    \n    }\n    console.log(\"inside\")\n    const url = 'http://localhost:8081/v1.0/market/company/register';\n    const token = sessionStorage.getItem('token');\n    const body = {\n      // companyCode: this.companyForm.value.companyCode,\n      companyName: this.companyForm.value.companyName,\n      companyCEO: this.companyForm.value.companyCEO,\n      companyTurnover: this.companyForm.value.companyTurnover,\n      companyWebsite: this.companyForm.value.companyWebsite,\n      stockExchange: this.companyForm.value.stockExchange,\n      //stockPrice: this.companyForm.value.stockPrice,\n     // latestStockPrice: this.companyForm.value.latestStockPrice,\n      \n    };\n    console.log(this.companyForm) \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      })\n    };\n \n    console.log('Company Name:', this.companyForm.value.companyName);\n    \n    this.http.post(url, body, httpOptions).subscribe(\n      () => {\n        console.log('Company added successfully');\n        // Handle success response here\n        this.getAllCompanies();\n        \n      },\n      (error) => {\n        console.error(error);\n        // Handle error response here\n      }\n    );\n    Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Company added successfully!',\n    });\n   \n  }\ngetAllCompanies() {\n  const url = 'http://localhost:8081/v1.0/market/company/getAll';\n  const token = sessionStorage.getItem('token');\n\n  console.log(\"Token -> \", token);\n \n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'Bearer ' + token\n    })\n  };\n  console.log(\"httpOptions -> \", httpOptions);\n  this.http.get<Company[]>(url, httpOptions).subscribe(movies => {\n    this.companies = movies.map(movie => ({\n      ...movie,\n      editMode: false\n    }));\n    const latestStockPrices = this.companies.map(company => company.latestStockPrice);\n        console.log('Latest Stock Prices:', latestStockPrices);\n  });\n}\nupdate(c: Company) {\n  const url = `http://localhost:8081/v1.0/market/company/put/${c.companyCode}`;\n  console.log(url);\n  this.isUpdate=true;\n  console.log(\"Inside\");\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n    })\n  };\n  this.selectedCompany=c;\n  const body = {\n    companyName: c.companyName,\n    companyCEO: c.companyCEO,\n    companyTurnover: c.companyTurnover,\n    companyWebsite: c.companyWebsite,\n    stockExchange: c.stockExchange\n  };\n  \n \n  this.http.put(url, body, httpOptions).subscribe(\n    (response) => {\n      console.log(response)\n      console.log('Company updated successfully');\n      return this.getAllCompanies;\n      // Handle success response here\n    },\n    (error) => {\n      console.error(error);\n      // Handle error response here\n    }\n  );\n \n}\n\n\ndeleteCompany(companyCode: number): void {\n  const url = `http://localhost:8081/v1.0/market/company/delete/${companyCode}`;\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n    }),\n    responseType: 'text' as 'json' // here\n  };\n  this.http.delete(url, httpOptions).subscribe(\n    () => {\n      console.log(\"Reloading admin dashboard after delete!!\");\n      this.ngOnInit();\n    },\n    (error) => {\n      console.error(error);\n    }\n  );\n}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}