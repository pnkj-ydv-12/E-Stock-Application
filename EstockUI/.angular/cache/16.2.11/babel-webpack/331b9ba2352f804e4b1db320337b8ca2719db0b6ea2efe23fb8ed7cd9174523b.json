{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CompanyInfoComponent = class CompanyInfoComponent {\n  constructor(route, http, es, authService) {\n    this.route = route;\n    this.http = http;\n    this.es = es;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.companyCode = +params['companyCode'];\n      this.getCompanyDetails();\n    });\n  }\n  getCompanyDetails() {\n    console.log(\"insdie getcompanyDetails\");\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      // Handle the case when there is no token (e.g., redirect to login)\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getCompanyDetailsByCode(this.companyCode, token).subscribe(data => {\n      console.log(data);\n      this.companyDetails = data;\n    }, error => {\n      console.error(error);\n      // Handle error response here\n    });\n  }\n};\n\nCompanyInfoComponent = __decorate([Component({\n  selector: 'app-company-info',\n  templateUrl: './company-info.component.html',\n  styleUrls: ['./company-info.component.css']\n})], CompanyInfoComponent);","map":{"version":3,"names":["Component","CompanyInfoComponent","constructor","route","http","es","authService","ngOnInit","params","subscribe","companyCode","getCompanyDetails","console","log","token","sessionStorage","getItem","error","getCompanyDetailsByCode","data","companyDetails","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2107054\\Documents\\EstockUI\\src\\app\\company-info\\company-info.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Company } from '../model/company';\nimport { AuthService } from '../service/auth.service';\nimport { EstockService } from '../service/EStock.service';\n\n@Component({\n  selector: 'app-company-info',\n  templateUrl: './company-info.component.html',\n  styleUrls: ['./company-info.component.css']\n})\nexport class CompanyInfoComponent implements OnInit {\n  companyCode!: number;\n  companyDetails!: Company;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private es: EstockService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.companyCode = +params['companyCode'];\n      this.getCompanyDetails();\n    });\n  }\n\n  getCompanyDetails(): void {\n    console.log(\"insdie getcompanyDetails\");\n    \n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      // Handle the case when there is no token (e.g., redirect to login)\n      console.error('No authorization token available.');\n      return;\n    }\n    this.es.getCompanyDetailsByCode(this.companyCode, token).subscribe(\n      (data: Company) => {\n        console.log(data);\n        this.companyDetails = data;\n      },\n      (error) => {\n        console.error(error);\n        // Handle error response here\n      }\n    );\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,KAAqB,EAAUC,IAAgB,EAAUC,EAAiB,EAAUC,WAAwB;IAA5G,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,EAAE,GAAFA,EAAE;IAAyB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAEpIC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,WAAW,GAAG,CAACF,MAAM,CAAC,aAAa,CAAC;MACzC,IAAI,CAACG,iBAAiB,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAA,iBAAiBA,CAAA;IACfC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEvC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACV;MACAF,OAAO,CAACK,KAAK,CAAC,mCAAmC,CAAC;MAClD;;IAEF,IAAI,CAACZ,EAAE,CAACa,uBAAuB,CAAC,IAAI,CAACR,WAAW,EAAEI,KAAK,CAAC,CAACL,SAAS,CAC/DU,IAAa,IAAI;MAChBP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACjB,IAAI,CAACC,cAAc,GAAGD,IAAI;IAC5B,CAAC,EACAF,KAAK,IAAI;MACRL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CACF;EACH;CAED;;AAlCYhB,oBAAoB,GAAAoB,UAAA,EALhCrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWvB,oBAAoB,CAkChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}